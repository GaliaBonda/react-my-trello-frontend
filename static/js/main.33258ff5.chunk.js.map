{"version":3,"sources":["pages/Board/components/Card/Card.tsx","pages/Board/components/List/List.tsx","pages/Board/Board.tsx","pages/Home/components/Board/Board.tsx","pages/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","title","className","List","cardsArr","cards","map","item","data","lists","id","Board","state","boardState","this","items","index","React","Component","color","style","backgroundColor","boards","Home","randomColor","Math","random","Main","About","App","to","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33258ff5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.scss';\r\n\r\nexport default function Card(props: { title: string }): JSX.Element {\r\n  const { title } = props;\r\n  return <h3 className=\"card-title\">{title}</h3>;\r\n}\r\n","import React from 'react';\r\nimport ICard from '../../../../common/interfaces/ICard';\r\nimport Card from '../Card/Card';\r\nimport './list.scss';\r\n\r\n// eslint-disable-next-line react/no-unused-prop-types\r\nexport default function List(props: { title: string; cards: ICard[] }): JSX.Element {\r\n  const { title, cards } = props;\r\n  const cardsArr = cards.map((item) => <Card title={item.title} />);\r\n  return (\r\n    <div className=\"list\">\r\n      <h2 className=\"list-title\">{title}</h2>\r\n      {cardsArr}\r\n      <button className=\"list-btn\">Создать карточку</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ICard from '../../common/interfaces/ICard';\r\nimport List from './components/List/List';\r\nimport './components/Board/board.scss';\r\n\r\ninterface IMyComponentProps {\r\n  title?: string;\r\n  lists?: { id: number; title: string; cards: ICard[] }[];\r\n}\r\n\r\ninterface IMyComponentState {\r\n  title: string;\r\n  lists: { id: number; title: string; cards: ICard[] }[];\r\n}\r\n\r\nconst data = {\r\n  title: 'Моя тестовая доска',\r\n  lists: [\r\n    {\r\n      id: 1,\r\n      title: 'Планы',\r\n      cards: [\r\n        { id: 1, title: 'помыть кота' },\r\n        { id: 2, title: 'приготовить суп' },\r\n        { id: 3, title: 'сходить в магазин' },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'В процессе',\r\n      cards: [{ id: 4, title: 'посмотреть сериал' }],\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Сделано',\r\n      cards: [\r\n        { id: 5, title: 'сделать домашку' },\r\n        { id: 6, title: 'погулять с собакой' },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default class Board extends React.Component<IMyComponentProps, IMyComponentState> {\r\n  constructor(props: IMyComponentProps) {\r\n    super(props);\r\n    this.state = data;\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    const boardState = this.state;\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    const items = boardState.lists.map((item, index) => <List title={item.title} cards={item.cards} key={index} />);\r\n    return (\r\n      <div className=\"board-container\">\r\n        <h1 className=\"board-title\">{boardState.title}</h1>\r\n        <div className=\"lists\">\r\n          {items}\r\n          <button className=\"board-btn\">Создать список</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './board.scss';\r\n\r\nexport default function Board(props: { title: string; color: string }): JSX.Element {\r\n  const { title } = props;\r\n  const { color } = props;\r\n  return (\r\n    <h3 className=\"board\" style={{ backgroundColor: color }}>\r\n      {title}\r\n    </h3>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Board from './components/Board/Board';\r\nimport './home.scss';\r\n\r\ninterface IMyComponentState {\r\n  boards: { id: number; title: string }[];\r\n}\r\n\r\ninterface IMyComponentProp {\r\n  boards?: { id: number; title: string }[];\r\n}\r\n\r\nconst boards = {\r\n  boards: [\r\n    { id: 1, title: 'покупки' },\r\n    { id: 2, title: 'подготовка к свадьбе' },\r\n    { id: 3, title: 'разработка интернет-магазина' },\r\n    { id: 4, title: 'курс по продвижению в соцсетях' },\r\n  ],\r\n};\r\n\r\nexport default class Home extends React.Component<IMyComponentProp, IMyComponentState> {\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  constructor(props: IMyComponentProp) {\r\n    super(props);\r\n    this.state = boards;\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    const boardsArr = this.state;\r\n    let randomColor;\r\n    const items = boardsArr.boards.map((item, index) => {\r\n      randomColor = `hsla(${Math.random() * 360}, 100%, 80%, 0.6)`;\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <Board title={item.title} key={index} color={randomColor} />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"boards-container\">\r\n        <div className=\"boards\">\r\n          {items}\r\n          <button className=\"new-board-btn\">Создать доску</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './app.scss';\nimport Board from './pages/Board/Board';\nimport Home from './pages/Home/Home';\n\nfunction Main(): JSX.Element {\n  return <Home />;\n}\n\nfunction About(): JSX.Element {\n  return <Board />;\n}\n\nexport default function App(): JSX.Element {\n  return (\n    <Router>\n      <div>\n        <nav className=\"nav\">\n          <ul>\n            <li>\n              <Link to={`${process.env.PUBLIC_URL}/`}>Home</Link>\n            </li>\n            <li>\n              <Link to={`${process.env.PUBLIC_URL}/board`}>Board</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path={`${process.env.PUBLIC_URL}/board`}>\n            <About />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/`}>\n            <Main />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}